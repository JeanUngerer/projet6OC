{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../shared/components/error-message/error-message.component\";\nconst _c0 = function (a0) {\n  return {\n    \"input-error\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.emailControl = new FormControl('', [Validators.required, Validators.email]);\n    this.passwordControl = new FormControl('', Validators.required);\n    this.submitted = false;\n    this.loginForm = new FormGroup({\n      email: this.emailControl,\n      password: this.passwordControl\n    });\n    this.hasAuthError = false;\n  }\n  ngOnInit() {}\n  /**\r\n   * Method triggered on form submit. Check the info and return according to api value.\r\n   */\n  login() {\n    this.submitted = true;\n    if (this.isValid()) {\n      this.authService.login({\n        email: this.email ? this.email : '',\n        password: this.password ? this.password : ''\n      }).subscribe(r => this.handleAuthSuccess(), err => this.handleAuthError(err));\n    }\n  }\n  /**\r\n   * If login and password match, access to the site\r\n   */\n  handleAuthSuccess() {\n    this.hasAuthError = false;\n    this.router.navigate(['/geo/home']);\n  }\n  /**\r\n   * else display error to the user\r\n   * @param err\r\n   */\n  handleAuthError(err) {\n    this.hasAuthError = true;\n  }\n  hasError(field) {\n    const has = this.submitted && !this.loginForm.get(field)?.valid ? true : false;\n    return has;\n  }\n  isValid() {\n    return !this.hasError('email') && !this.hasError('password');\n  }\n  handleChange() {\n    this.hasAuthError = false;\n  }\n  get email() {\n    return this.loginForm.get('email')?.value;\n  }\n  get password() {\n    return this.loginForm.get('password')?.value;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 10,\n  consts: [[1, \"root\"], [1, \"loginModal\"], [1, \"header\"], [1, \"icon-wrapper\"], [\"src\", \"assets/images/pay-my-buddy-logo.png\", \"alt\", \"logo pay-app\"], [1, \"content\"], [\"message\", \"Could not authenticate user\", 3, \"visible\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\", 1, \"label\"], [\"type\", \"text\", \"placeholder\", \"Enter email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"input\", 3, \"ngClass\", \"change\"], [\"message\", \"Please provide a valid email\", 3, \"visible\"], [\"for\", \"password\", 1, \"label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", \"formControlName\", \"password\", 1, \"input\", 3, \"ngClass\", \"change\"], [\"message\", \"Please provide a valid password\", 3, \"visible\"], [\"type\", \"submit\", 1, \"login-button\", \"button\", \"button-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelement(6, \"app-error-message\", 6);\n      i0.ɵɵelementStart(7, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"label\", 9);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 10);\n      i0.ɵɵlistener(\"change\", function LoginComponent_Template_input_change_11_listener() {\n        return ctx.handleChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"app-error-message\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 12);\n      i0.ɵɵtext(15, \"Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 13);\n      i0.ɵɵlistener(\"change\", function LoginComponent_Template_input_change_16_listener() {\n        return ctx.handleChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"app-error-message\", 14);\n      i0.ɵɵelementStart(18, \"button\", 15);\n      i0.ɵɵtext(19, \" Log in \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"visible\", ctx.hasAuthError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.hasError(\"email\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"visible\", ctx.hasError(\"email\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.hasError(\"password\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"visible\", ctx.hasError(\"password\"));\n    }\n  },\n  dependencies: [i3.NgClass, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.ErrorMessageComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 283:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Undefined variable.\\\\n   \\u2577\\\\n24 \\u2502   color: $blue-900;\\\\r\\\\n   \\u2502          ^^^^^^^^^\\\\n   \\u2575\\\\n  src\\\\\\\\styles.scss 24:10                             @import\\\\n  src\\\\\\\\app\\\\\\\\component\\\\\\\\login\\\\\\\\login.component.scss 1:9  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[283]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","router","authService","required","email","emailControl","password","passwordControl","ngOnInit","login","submitted","isValid","subscribe","r","handleAuthSuccess","err","handleAuthError","hasAuthError","navigate","hasError","field","has","loginForm","get","valid","handleChange","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\dev_school_projects\\projet6\\projet6OC\\pay-my-buddy-front\\src\\app\\component\\login\\login.component.ts","C:\\dev_school_projects\\projet6\\projet6OC\\pay-my-buddy-front\\src\\app\\component\\login\\login.component.html"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  emailControl = new FormControl('', [Validators.required, Validators.email]);\r\n  passwordControl = new FormControl('', Validators.required);\r\n  submitted: boolean = false;\r\n  loginForm = new FormGroup({\r\n    email: this.emailControl,\r\n    password: this.passwordControl,\r\n  });\r\n  hasAuthError: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n  ) {}\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * Method triggered on form submit. Check the info and return according to api value.\r\n   */\r\n  login() {\r\n    this.submitted = true;\r\n    if (this.isValid()) {\r\n      this.authService.login({\r\n        email: this.email ? this.email : '',\r\n        password: this.password ? this.password : '',\r\n      }).subscribe(\r\n        (r) => this.handleAuthSuccess(),\r\n        (err) => this.handleAuthError(err)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If login and password match, access to the site\r\n   */\r\n  handleAuthSuccess() {\r\n    this.hasAuthError = false;\r\n    this.router.navigate(['/geo/home']);\r\n  }\r\n\r\n  /**\r\n   * else display error to the user\r\n   * @param err\r\n   */\r\n  handleAuthError(err: any) {\r\n    this.hasAuthError = true;\r\n  }\r\n\r\n  hasError(field: string) {\r\n    const has =\r\n      this.submitted && !this.loginForm.get(field)?.valid ? true : false;\r\n    return has;\r\n  }\r\n\r\n  isValid() {\r\n    return !this.hasError('email') && !this.hasError('password');\r\n  }\r\n\r\n  handleChange() {\r\n    this.hasAuthError = false;\r\n  }\r\n\r\n  get email() {\r\n    return this.loginForm.get('email')?.value;\r\n  }\r\n  get password() {\r\n    return this.loginForm.get('password')?.value;\r\n  }\r\n}\r\n","<div class=\"root\">\r\n  <div class=\"loginModal\">\r\n    <div class=\"header\">\r\n\r\n    </div>\r\n\r\n    <div class=\"icon-wrapper\">\r\n      <img\r\n        src=\"assets/images/pay-my-buddy-logo.png\"\r\n        alt=\"logo pay-app\"\r\n      />\r\n    </div>\r\n    <div class=\"content\">\r\n      <app-error-message\r\n        message=\"Could not authenticate user\"\r\n        [visible]=\"hasAuthError\"\r\n      >\r\n      </app-error-message>\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\" class=\"label\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter email\"\r\n            id=\"email\"\r\n            [ngClass]=\"{\r\n              'input-error': hasError('email')\r\n            }\"\r\n            class=\"input\"\r\n            formControlName=\"email\"\r\n            (change)=\"handleChange()\"\r\n          />\r\n          <app-error-message\r\n            [visible]=\"hasError('email')\"\r\n            message=\"Please provide a valid email\"\r\n          >\r\n          </app-error-message>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\" class=\"label\">Password </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            class=\"input\"\r\n            [ngClass]=\"{\r\n              'input-error': hasError('password')\r\n            }\"\r\n            formControlName=\"password\"\r\n            (change)=\"handleChange()\"\r\n          />\r\n          <app-error-message\r\n            [visible]=\"hasError('password')\"\r\n            message=\"Please provide a valid password\"\r\n          >\r\n          </app-error-message>\r\n\r\n          <button class=\"login-button button button-primary\" type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}